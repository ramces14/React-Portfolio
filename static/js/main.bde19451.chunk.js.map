{"version":3,"sources":["images/Techdegree-project-1-screenshot.png","images/Techdegree-project-2-screenshot.png","images/Techdegree-project-3-screenshot.png","images/Techdegree-project-4-screenshot.png","images/Techdegree-project-6-screenshot.png","images/Techdegree-project-7-screenshot.png","images/Techdegree-project-8-screenshot.png","images/amazon-clone.jpg","images/netflix-clone.jpg","images/Screenshot-Daily-Journal.jpg","images/Screenshot-ToDoList.jpg","images/Screenshot-Simon-Game.jpg","images/Greece-2.jpg","images/Resume.pdf","images/RamcesLogoMint.jpg","images/Profile-picture.jpg","images/javascript.png","images/react.png","images/mongoDB.png","images/node.png","images/express.png","components/Card.js","cardInformation.js","components/HTML.js","components/CSS.js","components/Javascript.js","components/Reacts.js","components/Express.js","components/Projects.js","components/About.js","components/Header.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","className","src","img","alt","title","content","href","link","target","rel","github","information","firstProject","secondProject","thirdProject","fourthProject","Game","sixthProject","seventhProject","eigthProject","amazonClone","Netflix","Journal","ToDoList","HTML","html","CSS","css","map","data","index","key","Javascript","javascript","Reacts","react","Express","express","Projects","to","exact","path","render","component","About","pdf","download","Greece","Header","Logo","Home","ProfilePic","js","mongoDB","Node","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bde19451.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Techdegree-project-1-screenshot.ad3df747.png\";","module.exports = __webpack_public_path__ + \"static/media/Techdegree-project-2-screenshot.2850d755.png\";","module.exports = __webpack_public_path__ + \"static/media/Techdegree-project-3-screenshot.50cfc955.png\";","module.exports = __webpack_public_path__ + \"static/media/Techdegree-project-4-screenshot.36dd67d8.png\";","module.exports = __webpack_public_path__ + \"static/media/Techdegree-project-6-screenshot.40fab099.png\";","module.exports = __webpack_public_path__ + \"static/media/Techdegree-project-7-screenshot.89625300.png\";","module.exports = __webpack_public_path__ + \"static/media/Techdegree-project-8-screenshot.57367319.png\";","module.exports = __webpack_public_path__ + \"static/media/amazon-clone.612c1933.jpg\";","module.exports = __webpack_public_path__ + \"static/media/netflix-clone.3def23f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Screenshot-Daily-Journal.a019b7f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Screenshot-ToDoList.b72ff9a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Screenshot-Simon-Game.2445df35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Greece-2.19d1d4d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Resume.892debf8.pdf\";","module.exports = __webpack_public_path__ + \"static/media/RamcesLogoMint.354ae5f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Profile-picture.34bdd94f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/javascript.e38bf3f9.png\";","module.exports = __webpack_public_path__ + \"static/media/react.37ada809.png\";","module.exports = __webpack_public_path__ + \"static/media/mongoDB.3d21b082.png\";","module.exports = __webpack_public_path__ + \"static/media/node.717f5055.png\";","module.exports = __webpack_public_path__ + \"static/media/express.c9b864a6.png\";","import React from \"react\";\r\n\r\nfunction Card(props) {\r\n   return (\r\n      <div className=\"card\">\r\n         <img src={props.img} className=\"card-img-top\" alt=\"...\" />\r\n         <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{props.title}</h5>\r\n            <p className=\"card-text\">{props.content}</p>\r\n         </div>\r\n\r\n         <div className=\"btn-container\">\r\n         <a href={props.link} className=\"btn btn-color custom-btn\" target=\"_blank\" rel=\"noopener noreferrer\" >Launch website</a>\r\n         <a href={props.github} className=\"btn btn-color custom-btn\" target=\"_blank\" rel=\"noopener noreferrer\" >Github</a>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Card\r\n","import firstProject from \"./images/Techdegree-project-1-screenshot.png\"\r\nimport secondProject from \"./images/Techdegree-project-2-screenshot.png\"\r\nimport thirdProject from \"./images/Techdegree-project-3-screenshot.png\"\r\nimport fourthProject from \"./images/Techdegree-project-4-screenshot.png\"\r\nimport sixthProject from \"./images/Techdegree-project-6-screenshot.png\"\r\nimport seventhProject from \"./images/Techdegree-project-7-screenshot.png\"\r\nimport eigthProject from \"./images/Techdegree-project-8-screenshot.png\"\r\nimport amazonClone from \"./images/amazon-clone.jpg\";\r\nimport Netflix from \"./images/netflix-clone.jpg\";\r\nimport Journal from \"./images/Screenshot-Daily-Journal.jpg\";\r\nimport ToDoList from \"./images/Screenshot-ToDoList.jpg\";\r\nimport Game from \"./images/Screenshot-Simon-Game.jpg\";\r\n\r\nconst information = [\r\n   {\r\n      title: \"My First Project\",\r\n      img: firstProject,\r\n      content: \"This was the first project that I’ve ever worked on. It’s not much, all I added was a little bit of HTML that I learned in the beginning of my course. I keep it as a memory of how far I have gotten from the beginning of my programming journey. It is an eye opener of to see how far I’ve come, and this will help motivate me to continue my journey to becoming a professional software developer.\",\r\n      link: \"https://ramces14.github.io/Techdegree-project-1/\",\r\n      github: \"https://github.com/ramces14/TD-Project-1\"\r\n   },\r\n   [\r\n      {\r\n         title: \"Responsive Website\",\r\n         img: secondProject,\r\n         content: \"This project was my first attempt at using CSS to create a responsive webpage. The only skills required to do this project was HTML and CSS. With the use of media queries I was able to successfully build a responsive website that looked similar to the template that was provided for this project.\",\r\n         link: \"https://ramces14.github.io/Project2/\",\r\n         github: \"https://github.com/ramces14/Project2\"\r\n      },\r\n      {\r\n         title: \"CSS Form\",\r\n         img: thirdProject,\r\n         content: \"The goal of this project was to create a responsive webpage with the main focus on forms. Knowing how to create forms is an important part of web development and it allows people to provide feedback or interaction with one another. Here once again used CSS and HTML to create this responsive form using the template provided as a guide.\",\r\n         link: \"https://ramces14.github.io/Techdegree-project-3/\",\r\n         github: \"https://github.com/ramces14/Techdegree-project-3\"\r\n      },\r\n      {\r\n         title: \"SCSS Project\",\r\n         img: fourthProject,\r\n         content: \"The goal of this project was to use SCSS and the many features that it comes with to edit the layout of this site. Overall I find SCSS as a better way to organize CSS files, similar to the way that React organizes components together. I still use SCSS sometimes to organize the styles of very big projects, but for smaller project I stick to CSS.\",\r\n         link: \"https://ramces14.github.io/techdegree-project-4/\",\r\n         github: \"https://github.com/ramces14/techdegree-project-4\"\r\n      }\r\n   ],\r\n   [\r\n      {\r\n         title: \"Simon Game\",\r\n         img: Game,\r\n         content: `For this project I used javascript and jQuery to create a simon game. This game creates a random pattern that you must follow and adds a new step once you’ve completed the level. The pattern is stored in an array, and is emptied after you lose. This is a simple game that shows my skills in javascript dom manipulation and jQuery.`,\r\n         link: \"https://ramces14.github.io/Simon-Game/\",\r\n         github: \"https://github.com/ramces14/Simon-Game\"\r\n      },\r\n      {\r\n         title: \"Wheel of Success\",\r\n         img: sixthProject,\r\n         content: \"This project was my first attempt at manipulating the DOM. In this project I created a miniture version of the game show 'wheel of fortune'. I really enjoyed this project cause it was the first time I experince the power of javascript and the amount of interactivity that you add to a webpage to add to the user's experience.\",\r\n         link: \"https://ramces14.github.io/Techdegree-project-6/\",\r\n         github: \"https://github.com/ramces14/Techdegree-project-6\"\r\n      },\r\n      {\r\n         title: \"Responsive Dashboard\",\r\n         img: seventhProject,\r\n         content: \"This is the first project where I had to put all my skills together to create a website that was not only aesthetically pleasing, but also interactive. For this project I was given a template to guide me through the design of the website.Everything from the HTML, CSS, and javascript was created by me except the charts. The charts were created with the help of Chart.js. This was a really fun project to work on because I was able to put everything together to show how far I’ve gone since the beginning of my journey.\",\r\n         link: \"https://ramces14.github.io/Techdegree-project-7/\",\r\n         github: \"https://github.com/ramces14/Techdegree-project-7\"\r\n      },\r\n      {\r\n         title: \"Employee Directory\",\r\n         img: eigthProject,\r\n         content: \"The goal of this project was to create an Employee directory using an API that generated random users that have their own information like birthday, street address, and etc. This website was created with HTML, CSS and javascript, but most of the information was created using javascript to fetch most of the information using API’s. Like always this website is also responsive and has some interactivity as well.\",\r\n         link: \"https://ramces14.github.io/Techdegree-project-8/\",\r\n         github: \"https://github.com/ramces14/Techdegree-project-8\"\r\n      }\r\n   ],\r\n   [\r\n      {\r\n         title: \"Amazon Clone\",\r\n         img: amazonClone,\r\n         content: `The goal of this project was to create a replica of one the largest e-commerce website, Amazon. This website has the same look and feel of the actual Amazon website. At the moment products are manually added as components, but I plan to use an API in the future to load new products everyday. I included a checkout page and a page to sign-in with an account, or register if you haven’t done so. The backend is completed using firebase. It gives you the ability to register with your own email and password. This was a very fun and exciting project to work on. React is a very powerful javascript library that can really help you build anything that you can imagine.`,\r\n         link: \"https://clone-1dd81.web.app/\",\r\n         github: \"https://github.com/ramces14/Amazon-Clone\"\r\n      },\r\n      {\r\n         title: \"Netflix Clone\",\r\n         img: Netflix,\r\n         content: `The goal of this project was to create a copy of the popular streaming service \r\n         Netflix. The site was built to look like the homepage of Netflix. It has multiple \r\n         genres to choose from and it updates with new movies every week. The Banner also \r\n         changes with every refresh of the page. There are more updates that I want to add \r\n         to this clone like adding a sign in functionality, and possibly adding trailers to \r\n         all of the movies. Overall I found this project to be very fun, and I intend to update \r\n         this project with the mentioned updates that I would like to add.`,\r\n         link: \"https://netflix-clone-51fd3.web.app/\",\r\n         github: \"https://github.com/ramces14/Netflix-Clone\"\r\n      }\r\n   ],\r\n   [\r\n      {\r\n         title: \"Daily Journal\",\r\n         img: Journal,\r\n         content: `In this project I created a website that allows you to create a journal entry. The website saves your journal entry to the homepage where you can read all the journal entries that you’ve made. For now your journal entries are saved within an array. I would have loved for this site to use a database to save your data even after you leave the site, but running a server in my home would be very difficult. For now the entries will be saved as long as you stay on the site.`,\r\n         link: \"https://arcane-harbor-39253.herokuapp.com/\",\r\n         github: \"https://github.com/ramces14/Daily-Journal\"\r\n      },\r\n      {\r\n         title: \"To Do List\",\r\n         img: ToDoList,\r\n         content: `In this project I’ve created a simple todo list, but this todo list saves the data even after you leave the page. The data is saved using MongoDB atlas and using mongoose to create and store your data into MongoDB atlas. You may also delete items if you no longer need it in your list. Currently you can create a new list by adding a forward slash plus whatever you want to name your list to the end of the Url (/<Make a name>). I plan on updating this project by creating an input that allows you to create a new list making it easier for the user experience.`,\r\n         link: \"https://fierce-beyond-95770.herokuapp.com\",\r\n         github: \"https://github.com/ramces14/ToDoList\"\r\n      }\r\n   ]\r\n];\r\n\r\nexport default information;","import React from 'react'\r\nimport Card from \"./Card\";\r\nimport information from \"../cardInformation\";\r\nimport \"../css/Card.css\";\r\n\r\nfunction HTML() {\r\n    const [html] = information;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            \r\n            <Card \r\n                title={html.title}\r\n                img={html.img}\r\n                content={html.content}\r\n                link={html.link}\r\n                github={html.github}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HTML\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport information from \"../cardInformation\";\r\n\r\n\r\nfunction CSS() {\r\n\r\n    const css = information[1];\r\n\r\n    return (\r\n        <div className=\"multi-container\">\r\n\r\n            {css.map((data, index) => {\r\n                return(\r\n                    <Card \r\n                        key={index}\r\n                        title={data.title}\r\n                        img={data.img}\r\n                        content={data.content}\r\n                        link={data.link}\r\n                        github={data.github}\r\n                    />\r\n                );\r\n            })}  \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CSS\r\n","import React from 'react'\r\nimport Card from \"./Card\";\r\nimport information from \"../cardInformation\";\r\n\r\n\r\n\r\n\r\nfunction Javascript() {\r\n    const javascript = information[2];\r\n\r\n    return (\r\n        <div className=\"multi-container\">\r\n\r\n            {javascript.map((data, index) => {\r\n                return(\r\n                    <Card \r\n                        key={index}\r\n                        title={data.title}\r\n                        img={data.img}\r\n                        content={data.content}\r\n                        link={data.link}\r\n                        github={data.github}\r\n                    />\r\n                );\r\n            })}  \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Javascript\r\n","import React from 'react';\r\nimport Card from \"./Card\";\r\nimport information from \"../cardInformation\";\r\n\r\nfunction Reacts() {\r\n    const react = information[3];\r\n\r\n    return (\r\n        <div className=\"multi-container\">\r\n\r\n            {react.map((data, index) => {\r\n                return(\r\n                    <Card \r\n                        key={index}\r\n                        title={data.title}\r\n                        img={data.img}\r\n                        content={data.content}\r\n                        link={data.link}\r\n                        github={data.github}\r\n                    />\r\n                );\r\n            })}  \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reacts\r\n","import React from \"react\"\r\nimport Card from \"./Card\";\r\nimport information from \"../cardInformation\";\r\n\r\nfunction Express() {\r\n   const express = information[4];\r\n\r\n   return (\r\n      <div className=\"multi-container\">\r\n\r\n         {express.map((data, index) => {\r\n               return(\r\n                  <Card \r\n                     key={index}\r\n                     title={data.title}\r\n                     img={data.img}\r\n                     content={data.content}\r\n                     link={data.link}\r\n                     github={data.github}\r\n                  />\r\n               );\r\n         })}  \r\n\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Express\r\n","import React from 'react'\r\nimport { NavLink, Route, Redirect } from 'react-router-dom';\r\nimport '../css/Projects.css';\r\n\r\n// Projects\r\nimport HTML from './HTML';\r\nimport CSS from './CSS';\r\nimport Javascript from './Javascript';\r\nimport Reacts from './Reacts';\r\nimport Express from \"./Express\";\r\n\r\nfunction Projects() {\r\n    return (\r\n        <div className=\"projects\">\r\n            <h1 className=\"project__title\">Projects</h1>\r\n            <div className=\"navlink_container\">\r\n                <NavLink className=\"link\" to=\"/projects/html\"> <span className=\"project__buttons\">HTML</span> </NavLink>\r\n                <NavLink className=\"link\" to=\"/projects/css\"> <span className=\"project__buttons\">CSS</span> </NavLink>\r\n                <NavLink className=\"link\" to=\"/projects/javascript\"> <span className=\"project__buttons\">JavaScript</span> </NavLink>\r\n                <NavLink className=\"link\" to=\"/projects/react\"> <span className=\"project__buttons\">React</span> </NavLink>\r\n                <NavLink className=\"link\" to=\"/projects/express\"> <span className=\"project__buttons\">Express</span> </NavLink>\r\n            </div>\r\n\r\n            <Route exact path=\"/projects\" render={ () => <Redirect to=\"/projects/html\" /> }  />\r\n            <Route path=\"/projects/html\" component={HTML} />\r\n            <Route path=\"/projects/css\" component={CSS} />\r\n            <Route path=\"/projects/javascript\" component={Javascript} />\r\n            <Route path=\"/projects/react\" component={Reacts} />\r\n            <Route path=\"/projects/express\" component={Express} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n","import React from 'react'\r\nimport Greece from '../images/Greece-2.jpg';\r\nimport '../css/About.css';\r\nimport pdf from '../images/Resume.pdf';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"about\">\r\n            <h1 className=\"about-title\">Who I am</h1>\r\n\r\n            <div className=\"intro\">\r\n                <p>Designer & Developer based in NYC</p>\r\n            </div>\r\n\r\n            <div className=\"about__container\">\r\n\r\n                <p> My name is Ramces Gil. I graduated from the University of Albany about 2 years ago. I majored in Cyber-Security in college, but decided to become a full stack developer after graduating. Since then I have completed a front-end course at Team TreeHouse and have completed a full stack course on Udemy. I have created numerous applications for both front-end and back-end work. I may lack professional experience, but I believe that I can provide a fresh take and exceptional approach to every project that I take on. I am open minded and have the ability to learn things quickly. My goal is to become a team player that creates high-quality and unique products to my clients </p>\r\n\r\n                <p> If you would like to contact me my email is Ramces2580@gmail.com </p>  \r\n\r\n                <div className=\"about__links\">\r\n                    <a href={pdf} className=\"about__resume\" download>\r\n                        Resume\r\n                        <CloudDownloadIcon className=\"download__icon\" />\r\n                    </a>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"img-container\">\r\n                <img \r\n                    src={Greece}\r\n                    alt=\"Ramces's in Greece\" \r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport '../css/Header.css';\r\nimport Logo from '../images/RamcesLogoMint.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <img \r\n                src={Logo}\r\n                alt=\"Logo\" \r\n                className=\"header__logo\"\r\n            />\r\n\r\n            <div className=\"header__nav\">\r\n                <NavLink exact to=\"/\" className=\"link\"><span className=\"header__buttons\">Home</span></NavLink>\r\n                <NavLink to=\"/about\" className=\"link\"><span className=\"header__buttons\">About</span></NavLink>\r\n                <NavLink to=\"/projects\" className=\"link\"><span className=\"header__buttons\">Projects</span></NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport '../css/Home.css';\r\nimport ProfilePic from \"../images/Profile-picture.jpg\";\r\nimport js from \"../images/javascript.png\";\r\nimport react from \"../images/react.png\";\r\nimport mongoDB from \"../images/mongoDB.png\";\r\nimport Node from \"../images/node.png\";\r\nimport Express from \"../images/express.png\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"avatar__container\">\r\n                <img \r\n                    src={ProfilePic} \r\n                    alt=\"avatar\" \r\n                    className=\"home__avatar\"\r\n                />\r\n            </div>\r\n           \r\n            <div className=\"home__introduction\">\r\n                <h1>Hello I'm Ramces,</h1>\r\n                <p>a <b className=\"bold\">A full-stack developer</b> in New York City.</p>\r\n                <p className=\"introduction__p\">I specialize in Javascript for my front-end and back-end development.</p>\r\n                <p className=\"introduction__p\">\r\n                    I believe that hard work can take you anywhere in life as long as you continue to pursue\r\n                    your dreams. \r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"WhatIDo-container\">\r\n                <h1 className=\"badge-title\">What I do</h1>\r\n                <div className=\"badge-container\">\r\n                    <div className=\"badges\">\r\n                        <img src=\"https://www.searchpng.com/wp-content/uploads/2019/02/Bootstrap-Logo-PNG.png\" alt=\"Bootstrap Badge\"/>\r\n                    </div>\r\n                    <div className=\"badges\">\r\n                        <img src={js} alt=\"JavaScript Badge\"/>\r\n                    </div>\r\n                    <div className=\"badges\">\r\n                        <img src={react} alt=\"React Badge\"/>\r\n                    </div>\r\n                    <div className=\"badges\">\r\n                        <img src={mongoDB} alt=\"MongoDB Badge\"/>\r\n                    </div>\r\n                    <div className=\"badges\">\r\n                        <img src={Node} alt=\"NodeJs Badge\"/>\r\n                    </div>\r\n                    <div className=\"badges\">\r\n                        <img src={Express} alt=\"Express Badge\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\n// Components\nimport Projects from './components/Projects';\nimport About from './components/About';\nimport Header from './components/Header';\nimport Home from './components/Home';\n// Styles\nimport './css/App.css';\n\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <Switch>\n                    <Route path=\"/projects\">\n                        <Header />\n                        <Projects />\n                    </Route>\n\n                    <Route path=\"/about\">\n                        <Header />\n                        <About />\n                    </Route>\n            \n                    <Route path=\"/home\">\n                        <Header />\n                        <Home />\n                    </Route>\n\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}